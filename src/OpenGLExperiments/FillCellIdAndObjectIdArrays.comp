#version 460 core

// 0 is replaced at runtime with an actual value
#define particlesCount 0

layout(local_size_x = 1024) in;
layout(std430) buffer;

layout(location = 0) uniform vec2 windowSize;
layout(location = 1) uniform uint cellSize;
layout(location = 2) uniform bool isPaused;

layout(binding = 0) buffer SSBO
{
	vec2 particlesPos[];
};
layout(binding = 1) buffer cells1
{
	uint cellIds1[];
};
layout(binding = 2) buffer objects1
{
	uint objectIds[];
};
layout(binding = 9) buffer tetete
{
	float test[];
};
layout(binding = 15) buffer SSBOPressure
{
	float particlesPressure[];
};


void main()
{
	uint thid = gl_GlobalInvocationID.x;
	if (thid >= particlesCount)
		return;

	uint gridWidth = uint(ceil(windowSize.x / cellSize));
	vec2 gridPos; // integer part of mod operation
	modf(particlesPos[thid] / cellSize, gridPos); // float part of mod operation

	uint hCellId = uint(gridPos.x + gridPos.y * gridWidth); // home cell i.e cell where particle's center lands

	cellIds1[thid] = hCellId;
	objectIds[thid] = thid;

	if (!isPaused)
	{
		particlesPressure[thid] = 0.0;
	}
}
