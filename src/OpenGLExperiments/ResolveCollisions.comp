#version 460 core

layout(local_size_x = 1024) in;
layout(std430) buffer;


layout(location = 0) uniform vec2 windowSize;
layout(location = 1) uniform float cellSize;
layout(location = 2) uniform vec2 mousePos;
layout(location = 3) uniform bool isLeftMouseBtnPressed;
layout(location = 4) uniform uint currentCellsCount;
layout(location = 5) uniform float particleSize;
layout(location = 6) uniform bool isLeftMouseBtnReleased;
layout(location = 7) uniform vec2 mouseMoveDelta;


struct Particle
{
	vec2 Pos;
	vec2 PosPrev;
	vec2 Acc;
	float Pressure;
	float Unused;
};
struct collCell
{
	uint index;
	uint phantomAndHomeCellsCountPacked;
};


layout(binding = 0) buffer SSBO
{
	Particle particles[];
};
layout(binding = 1) buffer cells1
{
	uint cellIds[];
};
layout(binding = 2) buffer objects1
{
	uint objectIds[];
};
layout(binding = 9) buffer tetete
{
	float test[];
};
layout(binding = 10) buffer collisionList
{
	uint collisionCells[];
};
layout(binding = 13) buffer misc
{
	uint draggedParticleIndex;
};

void main()
{


//test[0] = collisionCells2.length();
//test[1] = collisionCells2[0].index;
}
