#version 460 core

#define threadsInThreadGroup 0
#define threadGroupsInWorkGroup 0
#define elementsPerGroup 0
#define threadGroupsTotal 1

layout(local_size_x = 1024) in;
layout(std430) buffer;

layout(location = 0) uniform vec2 windowSize;
layout(location = 1) uniform float forceScale;
layout(location = 2) uniform float velocityDamping;
layout(location = 3) uniform float minDistanceToAttractor;
layout(location = 4) uniform float deltaTime;
layout(location = 5) uniform bool isPaused;
layout(location = 6) uniform float particleSize;
layout(location = 7) uniform uint cellSize;

layout(binding = 1) buffer cells
{
	uint cellIds[];
};
layout(binding = 3) buffer counters
{
	uint globalCounters[];
};

shared uint sharedCounters[threadGroupsTotal] = uint[threadGroupsTotal](0);


void main()
{
	uint radix = gl_WorkGroupID.x * 4;
	uint globalCounterIndex = gl_LocalInvocationID.x * 256 + radix;

	sharedCounters[gl_LocalInvocationID.x] = globalCounters[globalCounterIndex];

	barrier();


}
